<button aria-label="Theme toggle" class="theme-toggle">
    <svg class="dark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2A9.91 9.91 0 0 0 9 2.46A10 10 0 0 1 9 21.54A10 10 0 1 0 12 2Z" /></svg>
    <svg class="light" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3.55 19.09L4.96 20.5L6.76 18.71L5.34 17.29M12 6C8.69 6 6 8.69 6 12S8.69 18 12 18 18 15.31 18 12C18 8.68 15.31 6 12 6M20 13H23V11H20M17.24 18.71L19.04 20.5L20.45 19.09L18.66 17.29M20.45 5L19.04 3.6L17.24 5.39L18.66 6.81M13 1H11V4H13M6.76 5.39L4.96 3.6L3.55 5L5.34 6.81L6.76 5.39M1 13H4V11H1M13 20H11V23H13" /></svg>
</button>

<script>
    if (localStorage.getItem('theme') === 'light') {
        document.documentElement.setAttribute('data-theme', 'light')
    } else if (localStorage.getItem('theme') === 'dark') {
        document.documentElement.setAttribute('data-theme', 'dark')
    }
</script>

<script webc:bucket="defer">
    const button = document.querySelector('.theme-toggle')
    const getCurrentTheme = () => document.documentElement.getAttribute('data-theme')
    const saveTheme = (theme) => {
        localStorage.setItem('theme', theme)
    }
    const setTheme = (theme) => {
        document.documentElement.setAttribute('data-theme', theme)
        saveTheme(theme)
    }

button.addEventListener('click', () => setTheme(getCurrentTheme() === 'dark' ? 'light' : 'dark'))
</script>

<style webc:bucket="defer">
    .theme-toggle {
        width: 1em;
        height: 1em;
        background: unset;
        border: unset;
        cursor: pointer;
        font-size: 1em;
        position: relative;
    }

    .light,
    .dark {
        position: absolute;
        top: 0;
        left: 0
    }

    .light {
        opacity: 0;
    }

    .dark {
        opacity: 0;

    }

    html[data-theme='light'] .light {
        opacity: 1;
        transition: all 0.5s ease;
        transform: rotate(360deg);
    }

    html[data-theme='dark'] .dark {
        opacity: 1;
        transition: all 0.5s ease;
        transform: rotate(360deg);
    }

</style>

<style webc:scoped>
    :host {
        display: flex;
        align-items: center;
    }
</style>

<style>
    /* Initial theme */
    body {
        background: var(--background-color);
    }
    /* Dark theme */
    html[data-theme='dark'] {
        --text-color: #fff;
        --link-color: bisque;
        --link-color-alt: lightblue;
        --primary-color: bisque;
        --primary-color-light: dimgrey;
        --secondary-color: black;
        --tertiary-color: #2d2d2d;
        --background-color: #191919;
        --background-secondary-color: #2d2d2d;
        --invert: 1
    }

    /* Light theme */
    html[data-theme='light'] {
        --text-color: #2d2d2d;
        --link-color: black;
        --link-color-alt: darkblue;
        --primary-color: lightsteelblue;
        --secondary-color: aliceblue;
        --tertiary-color: whitesmoke;
        --background-secondary-color: antiquewhite;
        --invert: 0
    }

    html,body {
        transition: all 0.3s ease;
    }

    .theme-toggle {
        align-self: center;
    }
</style>
